<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Accounts" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="AccountSettings" xml:space="preserve">
    <value>Change your account settings</value>
  </data>
  <data name="AddAccount" xml:space="preserve">
    <value>Add account</value>
  </data>
  <data name="AddAccountConfirm" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="AddFacebookPost" xml:space="preserve">
    <value>Add Facebook Post</value>
  </data>
  <data name="AddPage" xml:space="preserve">
    <value>Add Page</value>
  </data>
  <data name="AddPost" xml:space="preserve">
    <value>Add Post</value>
  </data>
  <data name="AssociateProviderAfter" xml:space="preserve">
    <value>account</value>
  </data>
  <data name="AssociateProviderPrev" xml:space="preserve">
    <value>Associate your</value>
  </data>
  <data name="AssociationForm" xml:space="preserve">
    <value>Association Form</value>
  </data>
  <data name="AuthenticationSuccessAfter" xml:space="preserve">
    <value />
  </data>
  <data name="AuthenticationSuccessPrev" xml:space="preserve">
    <value>You've successfully authenticated with</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>Choose</value>
  </data>
  <data name="ChoosePost" xml:space="preserve">
    <value>Choose Post</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ConfirmedEmail" xml:space="preserve">
    <value>Thank you for confirming your email. Please</value>
  </data>
  <data name="ConfirmedEmailLink" xml:space="preserve">
    <value>Click here to Log in</value>
  </data>
  <data name="ConfirmEmail" xml:space="preserve">
    <value>Confirm Email</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="CurrentLogins" xml:space="preserve">
    <value>Current Logins</value>
  </data>
  <data name="DuplicatePost" xml:space="preserve">
    <value>You have already added this post or page</value>
  </data>
  <data name="EarnPointsFacebookPages" xml:space="preserve">
    <value>Earn points liking facebook pages</value>
  </data>
  <data name="EarnPointsFacebookPosts" xml:space="preserve">
    <value>Earn points liking facebook posts</value>
  </data>
  <data name="EarnPointsInstagramPosts" xml:space="preserve">
    <value>Earn points liking Instagram posts</value>
  </data>
  <data name="ExternalLogins" xml:space="preserve">
    <value>External Logins</value>
  </data>
  <data name="FacebookPage" xml:space="preserve">
    <value>Facebook Page</value>
  </data>
  <data name="FacebookPosts" xml:space="preserve">
    <value>Facebook Posts</value>
  </data>
  <data name="FollowUsers" xml:space="preserve">
    <value>Follow users</value>
  </data>
  <data name="GetFacebookLikes" xml:space="preserve">
    <value>Get Facebook likes</value>
  </data>
  <data name="GetFacebookLikesInfo" xml:space="preserve">
    <value>Using Budaliken you can increase the number of likes of your posts through Facebook.</value>
  </data>
  <data name="GetFollowers" xml:space="preserve">
    <value>Get followers</value>
  </data>
  <data name="GetFollowersInfo" xml:space="preserve">
    <value>Wanna increase the number of followers? Go ahead</value>
  </data>
  <data name="GetInstagramFavs" xml:space="preserve">
    <value>Get Instagram favs</value>
  </data>
  <data name="GetInstagramFavsInfo" xml:space="preserve">
    <value>Budaliken allows you to increase the favs of your post in Instagram</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Use this area to provide additional information.</value>
  </data>
  <data name="InstagramPost" xml:space="preserve">
    <value>Instagram post</value>
  </data>
  <data name="JumbotronInfo" xml:space="preserve">
    <value>Budaliken is a website for increasing
        likes, followers, favs and etc. in sites like
        Facebook, Instagram</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Learn more</value>
  </data>
  <data name="LikePages" xml:space="preserve">
    <value>Like pages</value>
  </data>
  <data name="LikePosts" xml:space="preserve">
    <value>Like posts</value>
  </data>
  <data name="LinkRequired" xml:space="preserve">
    <value>Link is required</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="Manage" xml:space="preserve">
    <value>Manage</value>
  </data>
  <data name="ManageLogins" xml:space="preserve">
    <value>Manage your external logins</value>
  </data>
  <data name="Marketing" xml:space="preserve">
    <value>Marketing</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NotValidLink" xml:space="preserve">
    <value>Link is not valid</value>
  </data>
  <data name="OtherLogins" xml:space="preserve">
    <value>Other Logins</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="Pages" xml:space="preserve">
    <value>Pages</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>Points</value>
  </data>
  <data name="PointsRange" xml:space="preserve">
    <value>Points should be between 5 and 100</value>
  </data>
  <data name="PointsRequired" xml:space="preserve">
    <value>Points are required</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="Posts" xml:space="preserve">
    <value>Posts</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisteredLogins" xml:space="preserve">
    <value>Registered logins</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RequestUsername" xml:space="preserve">
    <value>Please enter a user name for this site below and click the Register button to finish logging in.</value>
  </data>
  <data name="SelectPage" xml:space="preserve">
    <value>Select your page</value>
  </data>
  <data name="Support" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
</root>